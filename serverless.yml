service: au-userbackend

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  httpApi:
    cors: true

custom:
  domainName: ${self:service}
  customDomain:
    http:
      createRoute53Record: true
      certificateName: '*.aamhiunique.com'
      domainName: aamhiunique.com
functions:
  AamhiUniqueRegisterUser:
    handler: src/user/registeruser.execute
    name: ${self:service}-register-aamhi-unique-user
    role: AamhiUniqueRegisterUserRole
    logSubcription: true
    package:
      exclude:
        - ./**
      include:
        - ./src/user/registeruser.py
    events:
      - http:
          path: /${self:service}/aamhi-unique-register-user
          method: post
          # authorizer: 
          #   type: token
          #   identitySource: method.request.header.Authorization
          #   arn: arn:aws:cognito-idp:us-east-1:124375682725:userpool/us-east-1_g0pSXvXvW
    environment:
      apiId: !Ref ApiGatewayRestApi
      AAMHI_UNIQUE_REGISTER_TABLE: !Ref usersTable

  AamhiUniqueLoginUser:
    handler: src/user/loginuser.execute
    name: ${self:service}-login-aamhi-unique-user
    role: AamhiUniqueRegisterUserRole
    logSubcription: true
    package:
      exclude:
        - ./**
      include:
        - ./src/user/loginuser.py
    events:
      - http:
          path: /${self:service}/aamhi-unique-login-user
          method: post
          # authorizer: 
          #   type: token
          #   identitySource: method.request.header.Authorization
          #   arn: arn:aws:cognito-idp:us-east-1:124375682725:userpool/us-east-1_g0pSXvXvW
    environment:
      apiId: !Ref ApiGatewayRestApi
      AAMHI_UNIQUE_REGISTER_TABLE: !Ref usersTable

  # AamhiUniqueUpdateUser:
  #   handler: src/user/updateuser.execute
  #   name: ${self:service}-update-aamhi-unique-user
  #   role: AamhiUniqueRegisterUserRole
  #   logSubcription: true
  #   package:
  #     exclude:
  #       - ./**
  #     include:
  #       - ./src/user/updateuser.py
  #   events:
  #     - http:
  #         path: /${self:service}/aamhi-unique-update-user
  #         method: put
  #         # authorizer: 
  #         #   type: token
  #         #   identitySource: method.request.header.Authorization
  #         #   arn: arn:aws:cognito-idp:us-east-1:124375682725:userpool/us-east-1_g0pSXvXvW
  #   environment:
  #     apiId: !Ref ApiGatewayRestApi
  #     AAMHI_UNIQUE_REGISTER_TABLE: !Ref usersTable

  AamhiUniqueGetAllUser:
    handler: src/user/getusers.execute
    name: ${self:service}-get-all-aamhi-unique-users
    role: AamhiUniqueRegisterUserRole
    logSubcription: true
    package:
      exclude:
        - ./**
      include:
        - ./src/user/getusers.py
    events:
      - http:
          path: /${self:service}/get-all-aamhi-unique-users
          method: get
          # authorizer: 
          #   type: token
          #   identitySource: method.request.header.Authorization
          #   arn: arn:aws:cognito-idp:us-east-1:124375682725:userpool/us-east-1_g0pSXvXvW
    environment:
      apiId: !Ref ApiGatewayRestApi
      AAMHI_UNIQUE_REGISTER_TABLE: !Ref usersTable

  AamhiUniqueGetUser:
    handler: src/user/getuser.execute
    name: ${self:service}-update-aamhi-unique-user
    role: AamhiUniqueRegisterUserRole
    logSubcription: true
    package:
      exclude:
        - ./**
      include:
        - ./src/user/getuser.py
    events:
      - http:
          path: /${self:service}/aamhi-unique-get-user/{userId}
          method: get
          # authorizer: 
          #   type: token
          #   identitySource: method.request.header.Authorization
          #   arn: arn:aws:cognito-idp:us-east-1:124375682725:userpool/us-east-1_g0pSXvXvW
    environment:
      apiId: !Ref ApiGatewayRestApi

  AamhiUniqueDeleteUser:
    handler: src/user/deleteuser.execute
    name: ${self:service}-delete-aamhi-unique-user
    role: AamhiUniqueRegisterUserRole
    logSubcription: true
    package:
      exclude:
        - ./**
      include:
        - ./src/user/deleteuser.py
    events:
      - http:
          path: /${self:service}/aamhi-unique-delete-user/{userId}
          method: delete
          # authorizer: 
          #   type: token
          #   identitySource: method.request.header.Authorization
          #   arn: arn:aws:cognito-idp:us-east-1:124375682725:userpool/us-east-1_g0pSXvXvW
    environment:
      apiId: !Ref ApiGatewayRestApi
      AAMHI_UNIQUE_REGISTER_TABLE: !Ref usersTable
  

resources:
  Resources:
    usersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:service}-users-table
        AttributeDefinitions:
          - AttributeName: 'userId'
            AttributeType: 'S'
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: 'userId'
            KeyType: 'HASH'
        Tags:
          - Key: name
            Value: users-table

    cognitoAamhiUserPool:
      Type: AWS::Cognito::UserPool
      Properties: 
        UsernameAttributes: 
          - email
        UserPoolName: 'AamhiUniqueUsers'

    cognitoAamhiUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: Web
        UserPoolId: !Ref cognitoAamhiUserPool

    cognitoAamhiUniqueUserGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties: 
        Description: 'This Group is for normal Users who adds Posts and Comments'
        GroupName: AamhiUniqueUser
        Precedence: 0
        RoleArn: !GetAtt AamhiUniqueRegisterUserRole.Arn
        UserPoolId: !Ref cognitoAamhiUserPool

    AamhiUniqueRegisterUserRole:
      Type: AWS::IAM::Role
      Properties: 
        RoleName: AamhiUniqueRegisterUserRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: AamhiUniqueRegisterUserRolePolicy
            PolicyDocument: 
              Version: '2012-10-17'
              Statement: 
                - Effect: Allow
                  Action:
                    - 'dynamodb:*'
                  Resource:
                    - !GetAtt usersTable.Arn
                - Effect: Allow
                  Action:
                    - 'logs:*'
                  Resource:
                    - '*'
        Tags: 
          - Key: name
            Value: aamhiunique-users-role
